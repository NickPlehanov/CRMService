// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace CRMService
{
    public partial class A28Context : DbContext
    {
        public A28Context()
        {
        }

        public A28Context(DbContextOptions<A28Context> options)
            : base(options)
        {
        }

        public virtual DbSet<DeviceType> DeviceType { get; set; }
        public virtual DbSet<Ep> Ep { get; set; }
        public virtual DbSet<Epcustomer> Epcustomer { get; set; }
        public virtual DbSet<EventTemp> EventTemp { get; set; }
        public virtual DbSet<ExtField> ExtField { get; set; }
        public virtual DbSet<ObjAdmin> ObjAdmin { get; set; }
        public virtual DbSet<ObjCust> ObjCust { get; set; }
        public virtual DbSet<ObjExtField> ObjExtField { get; set; }
        public virtual DbSet<ObjSchedule> ObjSchedule { get; set; }
        public virtual DbSet<ObjType> ObjType { get; set; }
        public virtual DbSet<Object> Object { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<DeviceType>(entity =>
            {
                entity.Property(e => e.DeviceTypeId)
                    .HasColumnName("DeviceTypeID")
                    .ValueGeneratedNever();

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.Name).HasMaxLength(128);

                entity.Property(e => e.NickName).HasMaxLength(25);
            });

            modelBuilder.Entity<Ep>(entity =>
            {
                entity.HasKey(e => e.ProcId);

                entity.ToTable("EP");

                entity.HasIndex(e => e.OrderNumber);

                entity.HasIndex(e => e.ProcGroupId);

                entity.Property(e => e.ProcId).HasColumnName("ProcID");

                entity.Property(e => e.ComponentGuid)
                    .HasColumnName("ComponentGUID")
                    .HasMaxLength(128);

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.Name).HasMaxLength(128);

                entity.Property(e => e.Params).HasMaxLength(255);

                entity.Property(e => e.ProcGroupId).HasColumnName("ProcGroupID");

                entity.Property(e => e.RcfilterInterval).HasColumnName("RCFilterInterval");

                entity.Property(e => e.Title).HasMaxLength(128);
            });

            modelBuilder.Entity<Epcustomer>(entity =>
            {
                entity.HasKey(e => e.RecordId);

                entity.ToTable("EPCustomer");

                entity.HasIndex(e => e.OwnerRecordId);

                entity.HasIndex(e => e.RecordType);

                entity.Property(e => e.RecordId).HasColumnName("RecordID");

                entity.Property(e => e.CustomerGroupId).HasColumnName("CustomerGroupID");

                entity.Property(e => e.OwnerRecordId).HasColumnName("OwnerRecordID");
            });

            modelBuilder.Entity<EventTemp>(entity =>
            {
                entity.HasKey(e => e.EventTemplateId);

                entity.Property(e => e.EventTemplateId).HasColumnName("EventTemplateID");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.EventTemplateName)
                    .IsRequired()
                    .HasMaxLength(128);
            });

            modelBuilder.Entity<ExtField>(entity =>
            {
                entity.HasIndex(e => e.OrderNumber);

                entity.Property(e => e.ExtFieldId).HasColumnName("ExtFieldID");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.ExtFieldName)
                    .IsRequired()
                    .HasMaxLength(128);
            });

            modelBuilder.Entity<ObjAdmin>(entity =>
            {
                entity.Property(e => e.ObjAdminId).HasColumnName("ObjAdminID");

                entity.Property(e => e.AdminEmail).HasMaxLength(128);

                entity.Property(e => e.AdminGuid).HasColumnName("AdminGUID");

                entity.Property(e => e.AdminName)
                    .IsRequired()
                    .HasMaxLength(128);

                entity.Property(e => e.AdminPhone)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.MyAlarmUserId)
                    .HasColumnName("MyAlarmUserID")
                    .HasMaxLength(128);

                entity.Property(e => e.RegistrationDt)
                    .HasColumnName("RegistrationDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SentInviteDt)
                    .HasColumnName("SentInviteDT")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<ObjCust>(entity =>
            {
                entity.HasKey(e => e.RecordId);

                entity.HasIndex(e => e.ObjCustGuid)
                    .HasName("IX_ObjCust_GUID")
                    .IsUnique();

                entity.HasIndex(e => e.ObjectId);

                entity.HasIndex(e => e.OrderNumber);

                entity.Property(e => e.RecordId).HasColumnName("RecordID");

                entity.Property(e => e.IsVisibleInCabinet).HasDefaultValueSql("((1))");

                entity.Property(e => e.MyAlarmUserId)
                    .HasColumnName("MyAlarmUserID")
                    .HasMaxLength(128);

                entity.Property(e => e.MyAlarmUserPhone).HasMaxLength(128);

                entity.Property(e => e.NordKeyId).HasColumnName("NordKeyID");

                entity.Property(e => e.ObjCustAddress).HasMaxLength(255);

                entity.Property(e => e.ObjCustGuid)
                    .HasColumnName("ObjCustGUID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.ObjCustName).HasMaxLength(128);

                entity.Property(e => e.ObjCustPhone1).HasMaxLength(128);

                entity.Property(e => e.ObjCustPhone2).HasMaxLength(128);

                entity.Property(e => e.ObjCustPhone3).HasMaxLength(128);

                entity.Property(e => e.ObjCustPhone4).HasMaxLength(128);

                entity.Property(e => e.ObjCustPhone5).HasMaxLength(128);

                entity.Property(e => e.ObjCustTitle).HasMaxLength(128);

                entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

                entity.Property(e => e.Pincode)
                    .HasColumnName("PINCode")
                    .HasMaxLength(25);

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.ObjCust)
                    .HasForeignKey(d => d.ObjectId)
                    .HasConstraintName("FK_ObjCust_Object");
            });

            modelBuilder.Entity<ObjExtField>(entity =>
            {
                entity.HasKey(e => e.RecordId);

                entity.HasIndex(e => e.ExtFieldId)
                    .IncludeProperties(new[] { "ObjectID", "ExtFieldValue" });

                entity.HasIndex(e => e.ExtFiledValueGuid)
                    .HasName("IX_ObjExtField_GUID")
                    .IsUnique();

                entity.HasIndex(e => e.ObjectId);

                entity.Property(e => e.RecordId).HasColumnName("RecordID");

                entity.Property(e => e.ExtFieldId).HasColumnName("ExtFieldID");

                entity.Property(e => e.ExtFieldValue).HasMaxLength(255);

                entity.Property(e => e.ExtFiledValueGuid)
                    .HasColumnName("ExtFiledValueGUID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

                entity.HasOne(d => d.ExtField)
                    .WithMany(p => p.ObjExtField)
                    .HasForeignKey(d => d.ExtFieldId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ObjExtField_ExtField");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.ObjExtField)
                    .HasForeignKey(d => d.ObjectId)
                    .HasConstraintName("FK_ObjExtField_Object");
            });

            modelBuilder.Entity<ObjSchedule>(entity =>
            {
                entity.HasKey(e => e.RecordId);

                entity.HasIndex(e => e.ObjectId);

                entity.Property(e => e.RecordId).HasColumnName("RecordID");

                entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

                entity.Property(e => e.StartDt)
                    .HasColumnName("StartDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StopDt)
                    .HasColumnName("StopDT")
                    .HasColumnType("datetime");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.ObjSchedule)
                    .HasForeignKey(d => d.ObjectId)
                    .HasConstraintName("FK_ObjSchedule_Object");
            });

            modelBuilder.Entity<ObjType>(entity =>
            {
                entity.Property(e => e.ObjTypeId).HasColumnName("ObjTypeID");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.ObjTypeName)
                    .IsRequired()
                    .HasMaxLength(128);
            });

            modelBuilder.Entity<Object>(entity =>
            {
                entity.HasIndex(e => e.EventTemplateId)
                    .IncludeProperties(new[] { "ObjectID" });

                entity.HasIndex(e => e.ObjectId)
                    .HasName("IX_Object_GUID")
                    .IsUnique();

                entity.HasIndex(e => e.RecordDeleted)
                    .IncludeProperties(new[] { "ObjectID", "ObjectNumber", "ObjTypeID", "Name", "Contract", "ObjectPassword", "Address", "ControlTime" });

                entity.HasIndex(e => new { e.Contract, e.ObjectId });

                entity.HasIndex(e => new { e.ObjectNumber, e.RecordDeleted });

                entity.HasIndex(e => new { e.ControlTime, e.CtuseCommon, e.RecordDeleted })
                    .HasName("IX_Object_ControlTime");

                entity.HasIndex(e => new { e.CtuseCommon, e.RecordDeleted, e.ControlTime })
                    .IncludeProperties(new[] { "ObjectID" });

                entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

                entity.Property(e => e.ActionNumber).HasMaxLength(25);

                entity.Property(e => e.Address)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.ArmScheduleControlArm).HasColumnName("ArmSchedule_ControlArm");

                entity.Property(e => e.ArmScheduleControlDisarm).HasColumnName("ArmSchedule_ControlDisarm");

                entity.Property(e => e.ArmScheduleDeviation).HasColumnName("ArmSchedule_Deviation");

                entity.Property(e => e.ArmScheduleEarlyArm).HasColumnName("ArmSchedule_EarlyArm");

                entity.Property(e => e.ArmScheduleEarlyDisarm).HasColumnName("ArmSchedule_EarlyDisarm");

                entity.Property(e => e.ArmScheduleLaterArm).HasColumnName("ArmSchedule_LaterArm");

                entity.Property(e => e.ArmScheduleLaterDisarm).HasColumnName("ArmSchedule_LaterDisarm");

                entity.Property(e => e.AutoEnableDt)
                    .HasColumnName("AutoEnableDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.ChannelEthernetProviderId).HasColumnName("ChannelEthernetProviderID");

                entity.Property(e => e.ChannelGsmOperator1Id).HasColumnName("ChannelGsmOperator1ID");

                entity.Property(e => e.ChannelGsmOperator2Id).HasColumnName("ChannelGsmOperator2ID");

                entity.Property(e => e.ChannelGsmPhone1).HasMaxLength(128);

                entity.Property(e => e.ChannelGsmPhone2).HasMaxLength(128);

                entity.Property(e => e.ChannelPhonePhone).HasMaxLength(128);

                entity.Property(e => e.CommentForGuard).HasMaxLength(4000);

                entity.Property(e => e.CommentForOperator).HasMaxLength(4000);

                entity.Property(e => e.Contract)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.ContractPrice).HasColumnType("money");

                entity.Property(e => e.CtignoreSystemEvent)
                    .IsRequired()
                    .HasColumnName("CTIgnoreSystemEvent")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CtuseCommon)
                    .IsRequired()
                    .HasColumnName("CTUseCommon")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CustomersComment).HasMaxLength(4000);

                entity.Property(e => e.DeviceCsn).HasColumnName("DeviceCSN");

                entity.Property(e => e.DeviceHwversion).HasColumnName("DeviceHWVersion");

                entity.Property(e => e.DeviceImei)
                    .HasColumnName("DeviceIMEI")
                    .HasMaxLength(25);

                entity.Property(e => e.DeviceSim1)
                    .HasColumnName("DeviceSIM1")
                    .HasMaxLength(128);

                entity.Property(e => e.DeviceSim2)
                    .HasColumnName("DeviceSIM2")
                    .HasMaxLength(128);

                entity.Property(e => e.DeviceSwversion).HasColumnName("DeviceSWVersion");

                entity.Property(e => e.DeviceTypeId).HasColumnName("DeviceTypeID");

                entity.Property(e => e.DisableDt)
                    .HasColumnName("DisableDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.EventTemplateId).HasColumnName("EventTemplateID");

                entity.Property(e => e.Guid)
                    .HasColumnName("GUID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.IsDoubleFilter)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.IsGsmCsdchannel).HasColumnName("IsGsmCSDChannel");

                entity.Property(e => e.IsGsmDtmfchannel).HasColumnName("IsGsmDTMFChannel");

                entity.Property(e => e.IsGsmGprschannel).HasColumnName("IsGsmGPRSChannel");

                entity.Property(e => e.IsSecureAtm).HasColumnName("IsSecureATM");

                entity.Property(e => e.IsTestFilter)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.IsUseEpaf).HasColumnName("IsUseEPAF");

                entity.Property(e => e.JupiterArmDisarmPassword).HasMaxLength(25);

                entity.Property(e => e.JupiterCypherKey).HasMaxLength(128);

                entity.Property(e => e.JupiterDeviceId)
                    .HasColumnName("JupiterDeviceID")
                    .HasMaxLength(25);

                entity.Property(e => e.JupiterParams).HasMaxLength(4000);

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.LschedEnable).HasColumnName("LSchedEnable");

                entity.Property(e => e.LschedStart)
                    .HasColumnName("LSchedStart")
                    .HasColumnType("datetime");

                entity.Property(e => e.LschedStop)
                    .HasColumnName("LSchedStop")
                    .HasColumnType("datetime");

                entity.Property(e => e.MapFileName).HasMaxLength(255);

                entity.Property(e => e.MoneyBalance).HasColumnType("money");

                entity.Property(e => e.MonitoringStateId).HasColumnName("MonitoringStateID");

                entity.Property(e => e.MountingCompanyId).HasColumnName("MountingCompanyID");

                entity.Property(e => e.MountingPersonId).HasColumnName("MountingPersonID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(128);

                entity.Property(e => e.ObjAdminId).HasColumnName("ObjAdminID");

                entity.Property(e => e.ObjTypeId).HasColumnName("ObjTypeID");

                entity.Property(e => e.ObjectPassword)
                    .IsRequired()
                    .HasMaxLength(128);

                entity.Property(e => e.PaymentDate).HasColumnType("datetime");

                entity.Property(e => e.Phone1)
                    .IsRequired()
                    .HasMaxLength(128);

                entity.Property(e => e.Phone2)
                    .IsRequired()
                    .HasMaxLength(128);

                entity.Property(e => e.Phone3)
                    .IsRequired()
                    .HasMaxLength(128);

                entity.Property(e => e.Price).HasColumnType("money");

                entity.Property(e => e.PsecurityCompanyId).HasColumnName("PSecurityCompanyID");

                entity.Property(e => e.PserviceCompanyId).HasColumnName("PServiceCompanyID");

                entity.Property(e => e.RadioTransId).HasColumnName("RadioTransID");

                entity.Property(e => e.ReactionCompanyId).HasColumnName("ReactionCompanyID");

                entity.Property(e => e.ReactionDogovorId).HasColumnName("ReactionDogovorID");

                entity.Property(e => e.RegionId)
                    .HasColumnName("RegionID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.SecurityCompanyId).HasColumnName("SecurityCompanyID");

                entity.Property(e => e.SecurityDogovorId).HasColumnName("SecurityDogovorID");

                entity.Property(e => e.SecurityStateId).HasColumnName("SecurityStateID");

                entity.Property(e => e.ServiceCompanyId).HasColumnName("ServiceCompanyID");

                entity.Property(e => e.StartMonitoringDate).HasColumnType("datetime");

                entity.Property(e => e.StateChangeDate).HasColumnType("datetime");

                entity.Property(e => e.StopMonitoringDate).HasColumnType("datetime");

                entity.Property(e => e.TariffId).HasColumnName("TariffID");

                entity.Property(e => e.TransmitterId)
                    .HasColumnName("TransmitterID")
                    .HasMaxLength(24)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.WebLink).HasMaxLength(255);

                entity.Property(e => e.Xcoord).HasColumnName("XCoord");

                entity.Property(e => e.Ycoord).HasColumnName("YCoord");

                entity.HasOne(d => d.DeviceType)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.DeviceTypeId)
                    .HasConstraintName("FK_Object_DeviceTypeID");

                entity.HasOne(d => d.ObjAdmin)
                    .WithMany(p => p.Object)
                    .HasForeignKey(d => d.ObjAdminId)
                    .HasConstraintName("FK_Object_ObjectAdmin");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}